
name: ReplyIssueCreate

on:
  issues:
    types: [opened]

jobs:
  permission:
    name: permission check
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'github-actions[bot]' && !startsWith(github.event.issue.title, '[Issue]') }}
    steps:
    - name: check permission
      run: |
        echo ${{ github.actor }}
        echo permission pass
      
      
  build:
    runs-on: ubuntu-latest
    needs: permission
    steps:
    - uses: actions/checkout@v5
           
    - name: Set up Python 3.13
      uses: actions/setup-python@v6
      with:
        python-version: 3.13
    
    - name: Generate github hosts
      run: |
        python socket_query.py
        
    - uses: actions/github-script@v8
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
            let reg = /\[Host\]\d{4}-\d{2}-\d{2}/
            if (!reg.test("${{ github.event.issue.title }}")) {
                const d = new Date();
                const localTime = d.getTime();
                const localOffset = d.getTimezoneOffset() * 60000;   //getTimezoneOffset()返回是以分钟为单位，需要转化成ms
                const utc = localTime + localOffset;
                const offset = 8; //东8区
                const beijing = utc + (3600000 * offset);
                const nd = new Date(beijing);
                let year = "" + nd.getFullYear();
                let month = nd.getMonth() + 1;
                month = month >= 10 ? "" + month : "0" + month;
                let day = nd.getDate();
                day = day >= 10 ? "" + day : "0" + day;
                const title = `[Host]${year}-${month}-${day}`;
                console.log("title is: " + title);
                github.rest.issues.update({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: context.issue.number,
                    title: title,
                });
            }
            let fs = require("fs");
            fs.readFile("hosts.txt", 'utf-8', (err, data) => {
                github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: context.issue.number,
                    body: data
                }).then((res) => {
                    github.rest.issues.lock({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        issue_number: context.issue.number,
                        lock_reason: "off-topic",
                    });
                });
            });
 
    

    


